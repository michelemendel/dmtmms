


package view

import (
	"github.com/michelemendel/dmtmms/constants"
	// "github.com/michelemendel/dmtmms/entity"
)

templ (vctx *ViewCtx) UserSetPasswordInit() {
	if ctx.Value(constants.CTX_IS_XHR_KEY).(bool) {
		@vctx.UserSetPasswordInitPage()
	} else {
		@vctx.AppRoot("") {
			@vctx.UserSetPasswordInitPage()
		}
	}
}

templ (vctx *ViewCtx) UserSetPasswordInitPage() {
	<div id="setNewPassword">
		@vctx.UserSetPassword("", "")
		@vctx.Footer()
	</div>
}

templ (vctx *ViewCtx) UserSetPassword(newPassword, newPasswordCheck string) {
	<div id="setNewPassword" class="bg-gray-100 flex justify-center items-center h-screen">
		<div class="block max-w-sm rounded-lg bg-white p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700">
			<h1 class="text-2xl font-semibold mb-4">Set new password</h1>
			<form
				id="setNewPasswordForm"
				hx-post={ constants.ROUTE_USER_SET_PW }
				hx-target="#setNewPassword"
				hx-swap="outerHTML"
				hx-push-url={ constants.ROUTE_USER_SET_PW }
			>
				<!-- New password -->
				<div class="relative mb-6" data-te-input-wrapper-init>
					<input
						type="password"
						id="newpassword"
						name="newpassword"
						value={ newPassword }
						required
						class="peer block min-h-[auto] w-full rounded border-0 bg-transparent px-3 py-[0.32rem] leading-[1.6] outline-none transition-all duration-200 ease-linear focus:placeholder:opacity-100 data-[te-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none dark:text-neutral-200 dark:placeholder:text-neutral-200 [&:not([data-te-input-placeholder-active])]:placeholder:opacity-0"
						aria-describedby="emailHelp"
						placeholder="Enter email"
					/>
					<label
						for="newpassword"
						class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[te-input-state-active]:-translate-y-[0.9rem] peer-data-[te-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-200 dark:peer-focus:text-primary"
					>Password</label>
				</div>
				<!-- New password check -->
				<div class="relative mb-6" data-te-input-wrapper-init>
					<input
						type="password"
						id="newpasswordcheck"
						name="newpasswordcheck"
						value={ newPasswordCheck }
						required
						class="peer block min-h-[auto] w-full rounded border-0 bg-transparent px-3 py-[0.32rem] leading-[1.6] outline-none transition-all duration-200 ease-linear focus:placeholder:opacity-100 data-[te-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none dark:text-neutral-200 dark:placeholder:text-neutral-200 [&:not([data-te-input-placeholder-active])]:placeholder:opacity-0"
						placeholder="Password"
					/>
					<label
						for="newpasswordcheck"
						class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[te-input-state-active]:-translate-y-[0.9rem] peer-data-[te-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-200 dark:peer-focus:text-primary"
					>Repeat password</label>
				</div>
				<!-- Message -->
				if vctx.Msg != "" {
					<div class="mb-4">
						<div class="block text-blue-600 text-sm">{ vctx.Msg }</div>
					</div>
				}
				<div class="flex flex-row gap-x-1">
					<!-- Cancel button -->
					<button
						hx-get={ constants.ROUTE_MEMBERS }
						hx-target="#main"
						hx-select="#members"
						hx-swap="innerHTML"
						hx-push-url="true"
						class="dark:active:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)]] inline-block w-full rounded bg-primary px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-[0_4px_9px_-4px_#3b71ca] transition duration-150 ease-in-out hover:bg-primary-600 hover:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] focus:bg-primary-600 focus:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] focus:outline-none focus:ring-0 active:bg-primary-700 active:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] dark:shadow-[0_4px_9px_-4px_rgba(59,113,202,0.5)] dark:hover:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)] dark:focus:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)]"
					>Close</button>
					<!--Submit button-->
					<button
						type="submit"
						class="dark:active:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)]] inline-block w-full rounded bg-primary px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-[0_4px_9px_-4px_#3b71ca] transition duration-150 ease-in-out hover:bg-primary-600 hover:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] focus:bg-primary-600 focus:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] focus:outline-none focus:ring-0 active:bg-primary-700 active:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] dark:shadow-[0_4px_9px_-4px_rgba(59,113,202,0.5)] dark:hover:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)] dark:focus:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)]"
						data-te-ripple-init
						data-te-ripple-color="light"
					>
						Submit
					</button>
				</div>
			</form>
		</div>
	</div>
}

templ (vctx *ViewCtx) UserSetPassword1(newPassword, newPasswordCheck string) {
	<div id="setNewPassword" class="bg-gray-100 flex justify-center items-center h-screen">
		<div class="lg:p-36 md:p-52 sm:20 p-8 w-full lg:w-1/2">
			<h1 class="text-2xl font-semibold mb-4">Set new password</h1>
			<!-- Form -->
			<form
				id="setNewPasswordForm"
				hx-post={ constants.ROUTE_USER_SET_PW }
				hx-target="#setNewPassword"
				hx-swap="outerHTML"
				hx-push-url={ constants.ROUTE_USER_SET_PW }
			>
				<!-- New password -->
				<div class="mb-4">
					<label for="newpassword" class="inline-block text-gray-600">Password</label>
					<span class="relative">*</span>
					<input type="password" value={ newPassword } id="newpassword" name="newpassword" required class="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:border-blue-500"/>
				</div>
				<!-- New password check -->
				<div class="mb-4">
					<label for="newpasswordcheck" class="inline-block text-gray-600">Repeat password</label>
					<span class="relative">*</span>
					<input type="password" value={ newPasswordCheck } id="newpasswordcheck" name="newpasswordcheck" required class="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:border-blue-500"/>
				</div>
				<!-- Error -->
				if vctx.ViewError.Err != nil {
					<div class="mb-4">
						<div class="block text-red-600">{ vctx.ViewError.Err.Error() }</div>
					</div>
				}
				<!-- Message -->
				if vctx.Msg != "" {
					<div class="mb-4">
						<div class="block text-blue-600">{ vctx.Msg }</div>
					</div>
				}
				<!-- Cancel button -->
				<span>
					<button
						hx-get={ constants.ROUTE_MEMBERS }
						hx-target="#main"
						hx-select="#members"
						hx-swap="innerHTML"
						hx-push-url="true"
						class="bg-blue-500 hover:bg-blue-600 text-white font-semibold rounded-md py-2 px-4 w-full"
					>Cancel</button>
				</span>
				<!-- Submit button -->
				<span>
					<button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold rounded-md py-2 px-4 w-full">Submit</button>
				</span>
			</form>
		</div>
	</div>
}
